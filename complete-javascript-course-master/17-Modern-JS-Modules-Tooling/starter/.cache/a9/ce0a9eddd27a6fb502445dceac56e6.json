{"id":"script.js","dependencies":[{"name":"C:\\Users\\damia\\OneDrive\\Desktop\\it2023\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\package.json","includedInParent":true,"mtime":1683991648272},{"name":"./shoppingCart.js","loc":{"line":19,"column":26},"parent":"C:\\Users\\damia\\OneDrive\\Desktop\\it2023\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\script.js","resolved":"C:\\Users\\damia\\OneDrive\\Desktop\\it2023\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\shoppingCart.js"},{"name":"lodash-es","loc":{"line":92,"column":22},"parent":"C:\\Users\\damia\\OneDrive\\Desktop\\it2023\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\script.js","resolved":"C:\\Users\\damia\\OneDrive\\Desktop\\it2023\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\lodash.js"}],"generated":{"js":"\"use strict\";\n\nvar _shoppingCart = _interopRequireWildcard(require(\"./shoppingCart.js\"));\n\nvar _lodashEs = _interopRequireDefault(require(\"lodash-es\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// Importing module\n// import { addToCart, totalPrice as price, tq } from './shoppingCart.js';\nconsole.log('importing module'); // addToCart('bread', 5);\n// console.log(price, tq);\n////////////////////\n// import * as ShoppingCart from './shoppingCart.js';\n// ShoppingCart.addToCart('bread', 5);\n// console.log(ShoppingCart.totalPrice);\n/////////////////////////////\n// import add, { addToCart, totalPrice as price, tq } from './shoppingCart.js';\n// add('pizza', 2);\n// console.log(price, tq);\n\n(0, _shoppingCart.default)('pizza', 2);\n(0, _shoppingCart.default)('bread', 5);\nconsole.log(_shoppingCart.cart); // const res = await fetch('https://jsonplaceholder.typicode.com/posts');\n// const data = await res.json();\n// console.log('data', data);\n\nvar getLastPost =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime().mark(function _callee() {\n    var res, data;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://jsonplaceholder.typicode.com/posts');\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          console.log('data', data);\n          return _context.abrupt(\"return\", {\n            title: data.at(-1).title,\n            text: data.at(-1).body\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n\n  return function getLastPost() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar lastPost = getLastPost();\nconsole.log(lastPost); // promise pending result\n// Not very clean\n\nlastPost.then(function (last) {\n  return console.log(last);\n}); // const lastPost2 = await getLastPost();\n// console.log(lastPost2);\n// module pattern\n// const ShoppingCart2 = (function () {\n//   const cart = [];\n//   const shippingCost = 10;\n//   const totalPrice = 237;\n//   const totalQuantity = 23;\n//   const addToCart = function (product, quantity) {\n//     cart.push({ product, quantity });\n//     console.log(`${quantity} ${product} added to cart (shipping cost is ${shippingCost})`);\n//     const orderStock = function (product, quantity) {\n//       console.log(`${quantity} ${product} ordered from supplier`);\n//     };\n//     return {\n//       addToCart,\n//       cart,\n//       totalPrice,\n//       totalQuantity,\n//     };\n//   };\n// })();\n// ShoppingCart2.addToCart('apple', 4);\n// ShoppingCart2.addToCart('pizza', 2;\n// console.log(ShoppingCart2);\n// console.log(ShoppiingCart2.shippingCost); // undefined becouse private\n// CommonJS Modules\n// export\n// export.addTocart = function (product, quantity) {\n//         cart.push({ product, quantity });\n//         console.log(`${quantity} ${product} added to cart (shipping cost is ${shippingCost})`);\n// };\n// // import\n// const {addTocart} = require('./shoppingCart.js')\n// 276. A Brief Introduction to the Command Line\n// 277. Introduction to NPM\n// import cloneDeep from './node_modules/lodash-es/cloneDeep.js';\n\nvar state = {\n  cart: [{\n    product: 'bread',\n    quantity: 5\n  }, {\n    product: 'pizza',\n    quantity: 5\n  }],\n  user: {\n    loggedIn: true\n  }\n};\nvar stateClone = Object.assign({}, state); // old way of cloning Objects\n\nvar stateDeepClone = (0, _lodashEs.default)(state);\nstate.user.loggedIn = false;\nconsole.log(stateClone);\nconsole.log(stateDeepClone); // 278. Bundling With Parcel and NPM Scripts\n\nif (module.hot) {\n  module.hot.accept();\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"script.js","original":{"line":19,"column":0}},{"generated":{"line":5,"column":0},"source":"script.js","original":{"line":92,"column":0}},{"generated":{"line":15,"column":47},"source":"script.js","original":{"line":2,"column":0}},{"generated":{"line":21,"column":0},"source":"script.js","original":{"line":1,"column":0}},{"generated":{"line":22,"column":0},"source":"script.js","original":{"line":2,"column":0}},{"name":"console","generated":{"line":23,"column":0},"source":"script.js","original":{"line":4,"column":0}},{"generated":{"line":23,"column":7},"source":"script.js","original":{"line":4,"column":7}},{"name":"log","generated":{"line":23,"column":8},"source":"script.js","original":{"line":4,"column":8}},{"generated":{"line":23,"column":11},"source":"script.js","original":{"line":4,"column":0}},{"generated":{"line":23,"column":12},"source":"script.js","original":{"line":4,"column":12}},{"generated":{"line":23,"column":30},"source":"script.js","original":{"line":4,"column":0}},{"generated":{"line":23,"column":33},"source":"script.js","original":{"line":6,"column":0}},{"generated":{"line":24,"column":0},"source":"script.js","original":{"line":8,"column":0}},{"generated":{"line":25,"column":0},"source":"script.js","original":{"line":9,"column":0}},{"generated":{"line":26,"column":0},"source":"script.js","original":{"line":10,"column":0}},{"generated":{"line":27,"column":0},"source":"script.js","original":{"line":11,"column":0}},{"generated":{"line":28,"column":0},"source":"script.js","original":{"line":12,"column":0}},{"generated":{"line":29,"column":0},"source":"script.js","original":{"line":14,"column":0}},{"generated":{"line":30,"column":0},"source":"script.js","original":{"line":15,"column":0}},{"generated":{"line":31,"column":0},"source":"script.js","original":{"line":16,"column":0}},{"generated":{"line":32,"column":0},"source":"script.js","original":{"line":17,"column":0}},{"generated":{"line":34,"column":0},"source":"script.js","original":{"line":20,"column":0}},{"generated":{"line":34,"column":27},"source":"script.js","original":{"line":20,"column":4}},{"generated":{"line":34,"column":34},"source":"script.js","original":{"line":20,"column":0}},{"generated":{"line":34,"column":36},"source":"script.js","original":{"line":20,"column":13}},{"generated":{"line":34,"column":37},"source":"script.js","original":{"line":20,"column":0}},{"generated":{"line":35,"column":0},"source":"script.js","original":{"line":21,"column":0}},{"generated":{"line":35,"column":27},"source":"script.js","original":{"line":21,"column":4}},{"generated":{"line":35,"column":34},"source":"script.js","original":{"line":21,"column":0}},{"generated":{"line":35,"column":36},"source":"script.js","original":{"line":21,"column":13}},{"generated":{"line":35,"column":37},"source":"script.js","original":{"line":21,"column":0}},{"name":"console","generated":{"line":36,"column":0},"source":"script.js","original":{"line":22,"column":0}},{"generated":{"line":36,"column":7},"source":"script.js","original":{"line":22,"column":7}},{"name":"log","generated":{"line":36,"column":8},"source":"script.js","original":{"line":22,"column":8}},{"generated":{"line":36,"column":11},"source":"script.js","original":{"line":22,"column":0}},{"name":"cart","generated":{"line":36,"column":12},"source":"script.js","original":{"line":22,"column":12}},{"generated":{"line":36,"column":30},"source":"script.js","original":{"line":22,"column":0}},{"generated":{"line":36,"column":33},"source":"script.js","original":{"line":24,"column":0}},{"generated":{"line":37,"column":0},"source":"script.js","original":{"line":25,"column":0}},{"generated":{"line":38,"column":0},"source":"script.js","original":{"line":26,"column":0}},{"generated":{"line":40,"column":0},"source":"script.js","original":{"line":28,"column":0}},{"name":"getLastPost","generated":{"line":40,"column":4},"source":"script.js","original":{"line":28,"column":6}},{"generated":{"line":40,"column":15},"source":"script.js","original":{"line":28,"column":17}},{"generated":{"line":41,"column":0},"source":"script.js","original":{"line":28,"column":17}},{"generated":{"line":42,"column":0},"source":"script.js","original":{"line":28,"column":17}},{"generated":{"line":43,"column":0},"source":"script.js","original":{"line":28,"column":17}},{"generated":{"line":44,"column":0},"source":"script.js","original":{"line":28,"column":17}},{"generated":{"line":45,"column":0},"source":"script.js","original":{"line":28,"column":17}},{"generated":{"line":45,"column":29},"source":"script.js","original":{"line":28,"column":20}},{"generated":{"line":46,"column":0},"source":"script.js","original":{"line":28,"column":20}},{"generated":{"line":47,"column":0},"source":"script.js","original":{"line":28,"column":20}},{"generated":{"line":48,"column":0},"source":"script.js","original":{"line":28,"column":20}},{"generated":{"line":49,"column":0},"source":"script.js","original":{"line":28,"column":20}},{"generated":{"line":50,"column":0},"source":"script.js","original":{"line":28,"column":20}},{"generated":{"line":51,"column":0},"source":"script.js","original":{"line":28,"column":20}},{"name":"fetch","generated":{"line":51,"column":17},"source":"script.js","original":{"line":29,"column":20}},{"generated":{"line":51,"column":22},"source":"script.js","original":{"line":29,"column":25}},{"generated":{"line":51,"column":23},"source":"script.js","original":{"line":29,"column":26}},{"generated":{"line":51,"column":67},"source":"script.js","original":{"line":29,"column":25}},{"generated":{"line":51,"column":68},"source":"script.js","original":{"line":28,"column":20}},{"generated":{"line":53,"column":0},"source":"script.js","original":{"line":28,"column":20}},{"name":"res","generated":{"line":54,"column":0},"source":"script.js","original":{"line":29,"column":8}},{"name":"res","generated":{"line":54,"column":10},"source":"script.js","original":{"line":29,"column":8}},{"generated":{"line":54,"column":13},"source":"script.js","original":{"line":28,"column":20}},{"generated":{"line":55,"column":0},"source":"script.js","original":{"line":28,"column":20}},{"generated":{"line":56,"column":0},"source":"script.js","original":{"line":28,"column":20}},{"name":"res","generated":{"line":56,"column":17},"source":"script.js","original":{"line":30,"column":21}},{"generated":{"line":56,"column":20},"source":"script.js","original":{"line":30,"column":24}},{"name":"json","generated":{"line":56,"column":21},"source":"script.js","original":{"line":30,"column":25}},{"generated":{"line":56,"column":25},"source":"script.js","original":{"line":30,"column":21}},{"generated":{"line":56,"column":27},"source":"script.js","original":{"line":28,"column":20}},{"generated":{"line":58,"column":0},"source":"script.js","original":{"line":28,"column":20}},{"name":"data","generated":{"line":59,"column":0},"source":"script.js","original":{"line":30,"column":8}},{"name":"data","generated":{"line":59,"column":10},"source":"script.js","original":{"line":30,"column":8}},{"generated":{"line":59,"column":14},"source":"script.js","original":{"line":28,"column":20}},{"name":"console","generated":{"line":60,"column":0},"source":"script.js","original":{"line":31,"column":2}},{"name":"console","generated":{"line":60,"column":10},"source":"script.js","original":{"line":31,"column":2}},{"generated":{"line":60,"column":17},"source":"script.js","original":{"line":31,"column":9}},{"name":"log","generated":{"line":60,"column":18},"source":"script.js","original":{"line":31,"column":10}},{"generated":{"line":60,"column":21},"source":"script.js","original":{"line":31,"column":2}},{"generated":{"line":60,"column":22},"source":"script.js","original":{"line":31,"column":14}},{"generated":{"line":60,"column":28},"source":"script.js","original":{"line":31,"column":2}},{"name":"data","generated":{"line":60,"column":30},"source":"script.js","original":{"line":31,"column":22}},{"generated":{"line":60,"column":34},"source":"script.js","original":{"line":31,"column":2}},{"generated":{"line":61,"column":0},"source":"script.js","original":{"line":28,"column":20}},{"generated":{"line":61,"column":43},"source":"script.js","original":{"line":32,"column":9}},{"name":"title","generated":{"line":62,"column":0},"source":"script.js","original":{"line":32,"column":11}},{"name":"title","generated":{"line":62,"column":12},"source":"script.js","original":{"line":32,"column":11}},{"generated":{"line":62,"column":17},"source":"script.js","original":{"line":32,"column":16}},{"name":"data","generated":{"line":62,"column":19},"source":"script.js","original":{"line":32,"column":18}},{"generated":{"line":62,"column":23},"source":"script.js","original":{"line":32,"column":22}},{"name":"at","generated":{"line":62,"column":24},"source":"script.js","original":{"line":32,"column":23}},{"generated":{"line":62,"column":26},"source":"script.js","original":{"line":32,"column":18}},{"generated":{"line":62,"column":27},"source":"script.js","original":{"line":32,"column":26}},{"generated":{"line":62,"column":28},"source":"script.js","original":{"line":32,"column":27}},{"generated":{"line":62,"column":29},"source":"script.js","original":{"line":32,"column":18}},{"name":"title","generated":{"line":62,"column":31},"source":"script.js","original":{"line":32,"column":30}},{"generated":{"line":62,"column":36},"source":"script.js","original":{"line":32,"column":9}},{"name":"text","generated":{"line":63,"column":0},"source":"script.js","original":{"line":32,"column":37}},{"name":"text","generated":{"line":63,"column":12},"source":"script.js","original":{"line":32,"column":37}},{"generated":{"line":63,"column":16},"source":"script.js","original":{"line":32,"column":41}},{"name":"data","generated":{"line":63,"column":18},"source":"script.js","original":{"line":32,"column":43}},{"generated":{"line":63,"column":22},"source":"script.js","original":{"line":32,"column":47}},{"name":"at","generated":{"line":63,"column":23},"source":"script.js","original":{"line":32,"column":48}},{"generated":{"line":63,"column":25},"source":"script.js","original":{"line":32,"column":43}},{"generated":{"line":63,"column":26},"source":"script.js","original":{"line":32,"column":51}},{"generated":{"line":63,"column":27},"source":"script.js","original":{"line":32,"column":52}},{"generated":{"line":63,"column":28},"source":"script.js","original":{"line":32,"column":43}},{"name":"body","generated":{"line":63,"column":30},"source":"script.js","original":{"line":32,"column":55}},{"generated":{"line":64,"column":0},"source":"script.js","original":{"line":32,"column":9}},{"generated":{"line":64,"column":11},"source":"script.js","original":{"line":28,"column":20}},{"generated":{"line":66,"column":0},"source":"script.js","original":{"line":28,"column":20}},{"generated":{"line":67,"column":0},"source":"script.js","original":{"line":28,"column":20}},{"generated":{"line":68,"column":0},"source":"script.js","original":{"line":28,"column":20}},{"generated":{"line":69,"column":0},"source":"script.js","original":{"line":28,"column":20}},{"generated":{"line":70,"column":0},"source":"script.js","original":{"line":28,"column":20}},{"generated":{"line":71,"column":0},"source":"script.js","original":{"line":28,"column":20}},{"generated":{"line":71,"column":3},"source":"script.js","original":{"line":28,"column":17}},{"generated":{"line":73,"column":0},"source":"script.js","original":{"line":28,"column":17}},{"name":"getLastPost","generated":{"line":73,"column":18},"source":"script.js","original":{"line":28,"column":6}},{"generated":{"line":73,"column":29},"source":"script.js","original":{"line":28,"column":17}},{"generated":{"line":74,"column":0},"source":"script.js","original":{"line":28,"column":17}},{"generated":{"line":75,"column":0},"source":"script.js","original":{"line":28,"column":17}},{"generated":{"line":76,"column":0},"source":"script.js","original":{"line":28,"column":17}},{"generated":{"line":76,"column":3},"source":"script.js","original":{"line":28,"column":0}},{"generated":{"line":78,"column":0},"source":"script.js","original":{"line":35,"column":0}},{"name":"lastPost","generated":{"line":78,"column":4},"source":"script.js","original":{"line":35,"column":6}},{"generated":{"line":78,"column":12},"source":"script.js","original":{"line":35,"column":14}},{"name":"getLastPost","generated":{"line":78,"column":15},"source":"script.js","original":{"line":35,"column":17}},{"generated":{"line":78,"column":26},"source":"script.js","original":{"line":35,"column":28}},{"generated":{"line":78,"column":28},"source":"script.js","original":{"line":35,"column":0}},{"name":"console","generated":{"line":79,"column":0},"source":"script.js","original":{"line":36,"column":0}},{"generated":{"line":79,"column":7},"source":"script.js","original":{"line":36,"column":7}},{"name":"log","generated":{"line":79,"column":8},"source":"script.js","original":{"line":36,"column":8}},{"generated":{"line":79,"column":11},"source":"script.js","original":{"line":36,"column":0}},{"name":"lastPost","generated":{"line":79,"column":12},"source":"script.js","original":{"line":36,"column":12}},{"generated":{"line":79,"column":20},"source":"script.js","original":{"line":36,"column":0}},{"generated":{"line":79,"column":23},"source":"script.js","original":{"line":36,"column":23}},{"generated":{"line":80,"column":0},"source":"script.js","original":{"line":38,"column":0}},{"name":"lastPost","generated":{"line":82,"column":0},"source":"script.js","original":{"line":39,"column":0}},{"generated":{"line":82,"column":8},"source":"script.js","original":{"line":39,"column":8}},{"name":"then","generated":{"line":82,"column":9},"source":"script.js","original":{"line":39,"column":9}},{"generated":{"line":82,"column":13},"source":"script.js","original":{"line":39,"column":0}},{"generated":{"line":82,"column":14},"source":"script.js","original":{"line":39,"column":14}},{"name":"last","generated":{"line":82,"column":24},"source":"script.js","original":{"line":39,"column":14}},{"generated":{"line":82,"column":28},"source":"script.js","original":{"line":39,"column":18}},{"generated":{"line":83,"column":0},"source":"script.js","original":{"line":39,"column":18}},{"name":"console","generated":{"line":83,"column":9},"source":"script.js","original":{"line":39,"column":22}},{"generated":{"line":83,"column":16},"source":"script.js","original":{"line":39,"column":29}},{"name":"log","generated":{"line":83,"column":17},"source":"script.js","original":{"line":39,"column":30}},{"generated":{"line":83,"column":20},"source":"script.js","original":{"line":39,"column":22}},{"name":"last","generated":{"line":83,"column":21},"source":"script.js","original":{"line":39,"column":34}},{"generated":{"line":83,"column":25},"source":"script.js","original":{"line":39,"column":22}},{"generated":{"line":83,"column":26},"source":"script.js","original":{"line":39,"column":18}},{"generated":{"line":84,"column":0},"source":"script.js","original":{"line":39,"column":18}},{"generated":{"line":84,"column":1},"source":"script.js","original":{"line":39,"column":0}},{"generated":{"line":84,"column":4},"source":"script.js","original":{"line":41,"column":0}},{"generated":{"line":85,"column":0},"source":"script.js","original":{"line":42,"column":0}},{"generated":{"line":86,"column":0},"source":"script.js","original":{"line":44,"column":0}},{"generated":{"line":87,"column":0},"source":"script.js","original":{"line":46,"column":0}},{"generated":{"line":88,"column":0},"source":"script.js","original":{"line":47,"column":0}},{"generated":{"line":89,"column":0},"source":"script.js","original":{"line":48,"column":0}},{"generated":{"line":90,"column":0},"source":"script.js","original":{"line":49,"column":0}},{"generated":{"line":91,"column":0},"source":"script.js","original":{"line":50,"column":0}},{"generated":{"line":92,"column":0},"source":"script.js","original":{"line":52,"column":0}},{"generated":{"line":93,"column":0},"source":"script.js","original":{"line":53,"column":0}},{"generated":{"line":94,"column":0},"source":"script.js","original":{"line":54,"column":0}},{"generated":{"line":95,"column":0},"source":"script.js","original":{"line":56,"column":0}},{"generated":{"line":96,"column":0},"source":"script.js","original":{"line":57,"column":0}},{"generated":{"line":97,"column":0},"source":"script.js","original":{"line":58,"column":0}},{"generated":{"line":98,"column":0},"source":"script.js","original":{"line":59,"column":0}},{"generated":{"line":99,"column":0},"source":"script.js","original":{"line":60,"column":0}},{"generated":{"line":100,"column":0},"source":"script.js","original":{"line":61,"column":0}},{"generated":{"line":101,"column":0},"source":"script.js","original":{"line":62,"column":0}},{"generated":{"line":102,"column":0},"source":"script.js","original":{"line":63,"column":0}},{"generated":{"line":103,"column":0},"source":"script.js","original":{"line":64,"column":0}},{"generated":{"line":104,"column":0},"source":"script.js","original":{"line":65,"column":0}},{"generated":{"line":105,"column":0},"source":"script.js","original":{"line":66,"column":0}},{"generated":{"line":106,"column":0},"source":"script.js","original":{"line":68,"column":0}},{"generated":{"line":107,"column":0},"source":"script.js","original":{"line":69,"column":0}},{"generated":{"line":108,"column":0},"source":"script.js","original":{"line":71,"column":0}},{"generated":{"line":109,"column":0},"source":"script.js","original":{"line":72,"column":0}},{"generated":{"line":110,"column":0},"source":"script.js","original":{"line":74,"column":0}},{"generated":{"line":111,"column":0},"source":"script.js","original":{"line":76,"column":0}},{"generated":{"line":112,"column":0},"source":"script.js","original":{"line":77,"column":0}},{"generated":{"line":113,"column":0},"source":"script.js","original":{"line":78,"column":0}},{"generated":{"line":114,"column":0},"source":"script.js","original":{"line":79,"column":0}},{"generated":{"line":115,"column":0},"source":"script.js","original":{"line":81,"column":0}},{"generated":{"line":116,"column":0},"source":"script.js","original":{"line":83,"column":0}},{"generated":{"line":117,"column":0},"source":"script.js","original":{"line":84,"column":0}},{"generated":{"line":118,"column":0},"source":"script.js","original":{"line":86,"column":0}},{"generated":{"line":119,"column":0},"source":"script.js","original":{"line":88,"column":0}},{"generated":{"line":120,"column":0},"source":"script.js","original":{"line":90,"column":0}},{"generated":{"line":122,"column":0},"source":"script.js","original":{"line":94,"column":0}},{"name":"state","generated":{"line":122,"column":4},"source":"script.js","original":{"line":94,"column":6}},{"generated":{"line":122,"column":9},"source":"script.js","original":{"line":94,"column":11}},{"generated":{"line":122,"column":12},"source":"script.js","original":{"line":94,"column":14}},{"name":"cart","generated":{"line":123,"column":0},"source":"script.js","original":{"line":95,"column":2}},{"name":"cart","generated":{"line":123,"column":2},"source":"script.js","original":{"line":95,"column":2}},{"generated":{"line":123,"column":6},"source":"script.js","original":{"line":95,"column":6}},{"generated":{"line":123,"column":8},"source":"script.js","original":{"line":95,"column":8}},{"generated":{"line":123,"column":9},"source":"script.js","original":{"line":96,"column":4}},{"name":"product","generated":{"line":124,"column":0},"source":"script.js","original":{"line":96,"column":6}},{"name":"product","generated":{"line":124,"column":4},"source":"script.js","original":{"line":96,"column":6}},{"generated":{"line":124,"column":11},"source":"script.js","original":{"line":96,"column":13}},{"generated":{"line":124,"column":13},"source":"script.js","original":{"line":96,"column":15}},{"generated":{"line":124,"column":20},"source":"script.js","original":{"line":96,"column":4}},{"name":"quantity","generated":{"line":125,"column":0},"source":"script.js","original":{"line":96,"column":24}},{"name":"quantity","generated":{"line":125,"column":4},"source":"script.js","original":{"line":96,"column":24}},{"generated":{"line":125,"column":12},"source":"script.js","original":{"line":96,"column":32}},{"generated":{"line":125,"column":14},"source":"script.js","original":{"line":96,"column":34}},{"generated":{"line":126,"column":0},"source":"script.js","original":{"line":96,"column":4}},{"generated":{"line":126,"column":3},"source":"script.js","original":{"line":95,"column":8}},{"generated":{"line":126,"column":5},"source":"script.js","original":{"line":97,"column":4}},{"name":"product","generated":{"line":127,"column":0},"source":"script.js","original":{"line":97,"column":6}},{"name":"product","generated":{"line":127,"column":4},"source":"script.js","original":{"line":97,"column":6}},{"generated":{"line":127,"column":11},"source":"script.js","original":{"line":97,"column":13}},{"generated":{"line":127,"column":13},"source":"script.js","original":{"line":97,"column":15}},{"generated":{"line":127,"column":20},"source":"script.js","original":{"line":97,"column":4}},{"name":"quantity","generated":{"line":128,"column":0},"source":"script.js","original":{"line":97,"column":24}},{"name":"quantity","generated":{"line":128,"column":4},"source":"script.js","original":{"line":97,"column":24}},{"generated":{"line":128,"column":12},"source":"script.js","original":{"line":97,"column":32}},{"generated":{"line":128,"column":14},"source":"script.js","original":{"line":97,"column":34}},{"generated":{"line":129,"column":0},"source":"script.js","original":{"line":97,"column":4}},{"generated":{"line":129,"column":3},"source":"script.js","original":{"line":95,"column":8}},{"generated":{"line":129,"column":4},"source":"script.js","original":{"line":94,"column":14}},{"name":"user","generated":{"line":130,"column":0},"source":"script.js","original":{"line":99,"column":2}},{"name":"user","generated":{"line":130,"column":2},"source":"script.js","original":{"line":99,"column":2}},{"generated":{"line":130,"column":6},"source":"script.js","original":{"line":99,"column":6}},{"generated":{"line":130,"column":8},"source":"script.js","original":{"line":99,"column":8}},{"name":"loggedIn","generated":{"line":131,"column":0},"source":"script.js","original":{"line":99,"column":10}},{"name":"loggedIn","generated":{"line":131,"column":4},"source":"script.js","original":{"line":99,"column":10}},{"generated":{"line":131,"column":12},"source":"script.js","original":{"line":99,"column":18}},{"generated":{"line":131,"column":14},"source":"script.js","original":{"line":99,"column":20}},{"generated":{"line":132,"column":0},"source":"script.js","original":{"line":99,"column":8}},{"generated":{"line":133,"column":0},"source":"script.js","original":{"line":94,"column":14}},{"generated":{"line":133,"column":1},"source":"script.js","original":{"line":94,"column":0}},{"generated":{"line":134,"column":0},"source":"script.js","original":{"line":102,"column":0}},{"name":"stateClone","generated":{"line":134,"column":4},"source":"script.js","original":{"line":102,"column":6}},{"generated":{"line":134,"column":14},"source":"script.js","original":{"line":102,"column":16}},{"name":"Object","generated":{"line":134,"column":17},"source":"script.js","original":{"line":102,"column":19}},{"generated":{"line":134,"column":23},"source":"script.js","original":{"line":102,"column":25}},{"name":"assign","generated":{"line":134,"column":24},"source":"script.js","original":{"line":102,"column":26}},{"generated":{"line":134,"column":30},"source":"script.js","original":{"line":102,"column":19}},{"generated":{"line":134,"column":31},"source":"script.js","original":{"line":102,"column":33}},{"generated":{"line":134,"column":33},"source":"script.js","original":{"line":102,"column":19}},{"name":"state","generated":{"line":134,"column":35},"source":"script.js","original":{"line":102,"column":37}},{"generated":{"line":134,"column":40},"source":"script.js","original":{"line":102,"column":19}},{"generated":{"line":134,"column":41},"source":"script.js","original":{"line":102,"column":0}},{"generated":{"line":134,"column":43},"source":"script.js","original":{"line":102,"column":45}},{"generated":{"line":136,"column":0},"source":"script.js","original":{"line":103,"column":0}},{"name":"stateDeepClone","generated":{"line":136,"column":4},"source":"script.js","original":{"line":103,"column":6}},{"generated":{"line":136,"column":18},"source":"script.js","original":{"line":103,"column":20}},{"generated":{"line":136,"column":21},"source":"script.js","original":{"line":103,"column":23}},{"name":"state","generated":{"line":136,"column":44},"source":"script.js","original":{"line":103,"column":33}},{"generated":{"line":136,"column":49},"source":"script.js","original":{"line":103,"column":23}},{"generated":{"line":136,"column":50},"source":"script.js","original":{"line":103,"column":0}},{"name":"state","generated":{"line":137,"column":0},"source":"script.js","original":{"line":105,"column":0}},{"generated":{"line":137,"column":5},"source":"script.js","original":{"line":105,"column":5}},{"name":"user","generated":{"line":137,"column":6},"source":"script.js","original":{"line":105,"column":6}},{"generated":{"line":137,"column":10},"source":"script.js","original":{"line":105,"column":0}},{"name":"loggedIn","generated":{"line":137,"column":11},"source":"script.js","original":{"line":105,"column":11}},{"generated":{"line":137,"column":19},"source":"script.js","original":{"line":105,"column":0}},{"generated":{"line":137,"column":22},"source":"script.js","original":{"line":105,"column":22}},{"generated":{"line":137,"column":27},"source":"script.js","original":{"line":105,"column":0}},{"name":"console","generated":{"line":138,"column":0},"source":"script.js","original":{"line":106,"column":0}},{"generated":{"line":138,"column":7},"source":"script.js","original":{"line":106,"column":7}},{"name":"log","generated":{"line":138,"column":8},"source":"script.js","original":{"line":106,"column":8}},{"generated":{"line":138,"column":11},"source":"script.js","original":{"line":106,"column":0}},{"name":"stateClone","generated":{"line":138,"column":12},"source":"script.js","original":{"line":106,"column":12}},{"generated":{"line":138,"column":22},"source":"script.js","original":{"line":106,"column":0}},{"name":"console","generated":{"line":139,"column":0},"source":"script.js","original":{"line":107,"column":0}},{"generated":{"line":139,"column":7},"source":"script.js","original":{"line":107,"column":7}},{"name":"log","generated":{"line":139,"column":8},"source":"script.js","original":{"line":107,"column":8}},{"generated":{"line":139,"column":11},"source":"script.js","original":{"line":107,"column":0}},{"name":"stateDeepClone","generated":{"line":139,"column":12},"source":"script.js","original":{"line":107,"column":12}},{"generated":{"line":139,"column":26},"source":"script.js","original":{"line":107,"column":0}},{"generated":{"line":139,"column":29},"source":"script.js","original":{"line":109,"column":0}},{"generated":{"line":141,"column":0},"source":"script.js","original":{"line":111,"column":0}},{"name":"module","generated":{"line":141,"column":4},"source":"script.js","original":{"line":111,"column":4}},{"generated":{"line":141,"column":10},"source":"script.js","original":{"line":111,"column":10}},{"name":"hot","generated":{"line":141,"column":11},"source":"script.js","original":{"line":111,"column":11}},{"generated":{"line":141,"column":14},"source":"script.js","original":{"line":111,"column":0}},{"generated":{"line":141,"column":16},"source":"script.js","original":{"line":111,"column":16}},{"name":"module","generated":{"line":142,"column":0},"source":"script.js","original":{"line":112,"column":2}},{"name":"module","generated":{"line":142,"column":2},"source":"script.js","original":{"line":112,"column":2}},{"generated":{"line":142,"column":8},"source":"script.js","original":{"line":112,"column":8}},{"name":"hot","generated":{"line":142,"column":9},"source":"script.js","original":{"line":112,"column":9}},{"generated":{"line":142,"column":12},"source":"script.js","original":{"line":112,"column":2}},{"name":"accept","generated":{"line":142,"column":13},"source":"script.js","original":{"line":112,"column":13}},{"generated":{"line":142,"column":19},"source":"script.js","original":{"line":112,"column":2}},{"generated":{"line":143,"column":0},"source":"script.js","original":{"line":113,"column":1}}],"sources":{"script.js":"// Importing module\r\n// import { addToCart, totalPrice as price, tq } from './shoppingCart.js';\r\n\r\nconsole.log('importing module');\r\n\r\n// addToCart('bread', 5);\r\n\r\n// console.log(price, tq);\r\n////////////////////\r\n// import * as ShoppingCart from './shoppingCart.js';\r\n// ShoppingCart.addToCart('bread', 5);\r\n// console.log(ShoppingCart.totalPrice);\r\n\r\n/////////////////////////////\r\n// import add, { addToCart, totalPrice as price, tq } from './shoppingCart.js';\r\n// add('pizza', 2);\r\n// console.log(price, tq);\r\n\r\nimport add, { cart } from './shoppingCart.js';\r\nadd('pizza', 2);\r\nadd('bread', 5);\r\nconsole.log(cart);\r\n\r\n// const res = await fetch('https://jsonplaceholder.typicode.com/posts');\r\n// const data = await res.json();\r\n// console.log('data', data);\r\n\r\nconst getLastPost = async function () {\r\n  const res = await fetch('https://jsonplaceholder.typicode.com/posts');\r\n  const data = await res.json();\r\n  console.log('data', data);\r\n  return { title: data.at(-1).title, text: data.at(-1).body };\r\n};\r\n\r\nconst lastPost = getLastPost();\r\nconsole.log(lastPost); // promise pending result\r\n\r\n// Not very clean\r\nlastPost.then(last => console.log(last));\r\n\r\n// const lastPost2 = await getLastPost();\r\n// console.log(lastPost2);\r\n\r\n// module pattern\r\n\r\n// const ShoppingCart2 = (function () {\r\n//   const cart = [];\r\n//   const shippingCost = 10;\r\n//   const totalPrice = 237;\r\n//   const totalQuantity = 23;\r\n\r\n//   const addToCart = function (product, quantity) {\r\n//     cart.push({ product, quantity });\r\n//     console.log(`${quantity} ${product} added to cart (shipping cost is ${shippingCost})`);\r\n\r\n//     const orderStock = function (product, quantity) {\r\n//       console.log(`${quantity} ${product} ordered from supplier`);\r\n//     };\r\n//     return {\r\n//       addToCart,\r\n//       cart,\r\n//       totalPrice,\r\n//       totalQuantity,\r\n//     };\r\n//   };\r\n// })();\r\n\r\n// ShoppingCart2.addToCart('apple', 4);\r\n// ShoppingCart2.addToCart('pizza', 2;\r\n\r\n// console.log(ShoppingCart2);\r\n// console.log(ShoppiingCart2.shippingCost); // undefined becouse private\r\n\r\n// CommonJS Modules\r\n\r\n// export\r\n// export.addTocart = function (product, quantity) {\r\n//         cart.push({ product, quantity });\r\n//         console.log(`${quantity} ${product} added to cart (shipping cost is ${shippingCost})`);\r\n\r\n// };\r\n\r\n// // import\r\n// const {addTocart} = require('./shoppingCart.js')\r\n\r\n// 276. A Brief Introduction to the Command Line\r\n\r\n// 277. Introduction to NPM\r\n\r\n// import cloneDeep from './node_modules/lodash-es/cloneDeep.js';\r\n\r\nimport cloneDeep from 'lodash-es';\r\n\r\nconst state = {\r\n  cart: [\r\n    { product: 'bread', quantity: 5 },\r\n    { product: 'pizza', quantity: 5 },\r\n  ],\r\n  user: { loggedIn: true },\r\n};\r\n\r\nconst stateClone = Object.assign({}, state); // old way of cloning Objects\r\nconst stateDeepClone = cloneDeep(state);\r\n\r\nstate.user.loggedIn = false;\r\nconsole.log(stateClone);\r\nconsole.log(stateDeepClone);\r\n\r\n// 278. Bundling With Parcel and NPM Scripts\r\n\r\nif (module.hot) {\r\n  module.hot.accept();\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"9b29131bb4596ea5e298388a122dc4dc","cacheData":{"env":{}}}